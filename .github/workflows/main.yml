name: CI/CD Pipeline

on:
  pull_request:
    types: [closed]

jobs:
  build_and_deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: docker build -t mynestjs15 --build-arg SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }} --build-arg SLACK_SIGNING_SECRET=${{ secrets.SLACK_SIGNING_SECRET }} .

    - name: Tag Docker image
      run: docker tag mynestjs15:latest ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Push Docker image to ECR
      run: docker push ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Retrieve current task definition
      id: task-def
      run: |
        TASK_DEFINITION_ARN=$(aws ecs describe-services --cluster ${{ secrets.CLUSTER_NAME }} --services ${{ secrets.SERVICE_NAME }} --query 'services[0].taskDefinition' --output text)
        aws ecs describe-task-definition --task-definition $TASK_DEFINITION_ARN --query 'taskDefinition' > task-def.json

    - name: Extract and Update Task Definition
      id: update-task-def
      run: |
        # Extract necessary fields
        TASK_FAMILY=$(jq -r '.family' task-def.json)
        NETWORK_MODE=$(jq -r '.networkMode' task-def.json)
        CONTAINER_DEFS=$(jq '.containerDefinitions' task-def.json)

        # Create a new task definition JSON with the updated image
        IMAGE_URI=${{ secrets.ECR_REPOSITORY }}:latest
        NEW_TASK_DEF_JSON=$(jq --arg IMAGE_URI "$IMAGE_URI" \
          '.containerDefinitions[0].image = $IMAGE_URI | {family: .family, networkMode: .networkMode, containerDefinitions: .containerDefinitions, requiresCompatibilities: .requiresCompatibilities, cpu: .cpu, memory: .memory}' \
          task-def.json)

        echo "$NEW_TASK_DEF_JSON" > new-task-def.json

    - name: Register new task definition
      id: register-task-def
      run: |
        NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Update ECS service with new task definition
      run: |
        aws ecs update-service --cluster ${{ secrets.CLUSTER_NAME }} --service ${{ secrets.SERVICE_NAME }} --task-definition ${{ env.NEW_TASK_DEF_ARN }} --force-new-deployment
